{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../Services/alertify/alertify.service\";\nexport let WishlistService = /*#__PURE__*/(() => {\n  class WishlistService {\n    constructor(http, alerty) {\n      this.http = http;\n      this.alerty = alerty;\n      this.url_firebase = \"https://angular-bh-default-rtdb.firebaseio.com/\";\n    }\n\n    removetoWishlist(item) {\n      return this.http.delete(this.url_firebase + \"/wishlist/\" + item.userId + \"/list/\" + item.bookId + \".json\").pipe(tap(data => {\n        console.log(data);\n        this.alerty.error(\" Remove from WishList\");\n      }), catchError(this.HandleError));\n    }\n\n    postWishlist(item) {\n      const httpOption = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Token'\n        })\n      };\n      return this.http.post(this.url_firebase + \"/wishlist/\" + item.userId + \"/list/\" + item.bookId + \".json\", item, httpOption);\n    }\n\n    getWishlist(item) {\n      return this.http.get(this.url_firebase + \"/wishlist/\" + item + \"/list.json\").pipe(map(response => {\n        const wishLists = [];\n\n        for (const key in response) {\n          wishLists.push({ ...response[key],\n            id: key\n          });\n        }\n\n        wishLists.forEach(element => {\n          console.log(element.bookId);\n        });\n        return wishLists;\n      }));\n    }\n\n    HandleError(error) {\n      if (error.error instanceof ErrorEvent) {\n        console.log(\"Error: \" + error.error.message);\n      } else {\n        switch (error.status) {\n          case 404:\n            console.log(\"404 Error: \\n\" + error.message);\n            break;\n\n          case 403:\n            console.log(\"403 Error: \\n\" + error.message);\n            break;\n\n          case 500:\n            console.log(\"500 Error: \\n\" + error.message);\n            break;\n\n          default:\n            console.log(\"Some unknow Error: \\n\" + error.message);\n        }\n      }\n\n      return throwError(() => new Error(\"from HandleError: \" + error.message));\n    }\n\n  }\n\n  WishlistService.ɵfac = function WishlistService_Factory(t) {\n    return new (t || WishlistService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AlertifyService));\n  };\n\n  WishlistService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WishlistService,\n    factory: WishlistService.ɵfac,\n    providedIn: 'root'\n  });\n  return WishlistService;\n})();","map":null,"metadata":{},"sourceType":"module"}