{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { take, exhaustMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n    }\n\n    intercept(req, next) {\n      return this.authService.user.pipe(take(1), exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n\n        const updateReq = req.clone({\n          params: new HttpParams().set('auth', user.token)\n        });\n        return next.handle(updateReq);\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}