{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GenreService = /*#__PURE__*/(() => {\n  class GenreService {\n    constructor(http) {\n      this.http = http;\n      this.url_firebase = \"https://angular-bh-default-rtdb.firebaseio.com/\";\n      this.hasValue = false;\n    }\n\n    ngOnInit() {}\n\n    getGenres() {\n      return this.http.get(this.url_firebase + \"genres.json\").pipe(map(response => {\n        const genres = [];\n\n        for (const key in response) {\n          genres.push({ ...response[key],\n            id: key\n          });\n        }\n\n        return genres;\n      }));\n    }\n\n    hasGenre(item) {\n      let categories = this.getGenres().subscribe(c => {\n        c.forEach(element => {\n          for (let index = 0; index < c.length; index++) {\n            const elem = c[index];\n\n            if (elem.genrename == item) {\n              this.hasValue = true;\n            }\n          }\n        });\n      });\n      return this.hasValue;\n    }\n\n    postGenre(item) {\n      const httpOption = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Token'\n        })\n      };\n      return this.http.post(this.url_firebase + \"genres.json\", item, httpOption);\n    }\n\n  }\n\n  GenreService.ɵfac = function GenreService_Factory(t) {\n    return new (t || GenreService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GenreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GenreService,\n    factory: GenreService.ɵfac,\n    providedIn: 'root'\n  });\n  return GenreService;\n})();","map":null,"metadata":{},"sourceType":"module"}