{"ast":null,"code":"import _asyncToGenerator from \"G:/Step/Ev tap\\u015F\\u0131r\\u0131qlar\\u0131/4 -c\\xFC yar\\u0131m il/Angular/Layih\\u0259/10/Angular_E-commerce/appEcommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GenreService } from 'src/app/Components/genre/Services/genre.service';\nimport { AlertifyService } from 'src/app/Services/alertify/alertify.service';\nimport { BooksService } from '../../Services/books.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Components/genre/Services/genre.service\";\nimport * as i2 from \"../../Services/books.service\";\nimport * as i3 from \"src/app/Services/alertify/alertify.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common/http\";\nexport class BookcreateComponent {\n  constructor(genreService, bookservice, alertifyService, router, http) {\n    this.genreService = genreService;\n    this.bookservice = bookservice;\n    this.alertifyService = alertifyService;\n    this.router = router;\n    this.http = http;\n    this.genres = [];\n    this.model = {\n      genreId: -1\n    };\n    this.movieform = new FormGroup({\n      title_: new FormControl(\"Movie title\", [Validators.required, Validators.minLength(5)]),\n      description_: new FormControl(\"Movie description\", [Validators.required]),\n      imageUrl_: new FormControl(\"../../../assets/Images/image.png\", [Validators.required]),\n      categoryId_: new FormControl(\"-1\", [Validators.required]),\n      subimageUrl_: new FormControl(\"\", [Validators.required])\n    });\n  }\n\n  getfile(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.file = event.target.files[0];\n    })();\n  }\n\n  ngOnInit() {\n    this.genreService.getGenre().subscribe(data => {\n      this.genres = data;\n    });\n  }\n\n  isFormValid() {\n    return this.movieform.disabled ? true : this.movieform.valid;\n  }\n\n  createBook() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let formData = new FormData();\n      formData.set('file', _this2.file);\n      formData.append(\"file\", _this2.file);\n      formData.append(\"upload_preset\", \"angular-ecommerce\");\n\n      _this2.bookservice.uploadSignature(formData).subscribe(imageData => {\n        _this2.urlimage = imageData.url;\n        console.log(_this2.urlimage);\n        const movie = {\n          title: _this2.movieform.value.title_,\n          description: _this2.movieform.value.description_,\n          imageUrl: _this2.movieform.value.imageUrl_,\n          isPopular: false,\n          datePublished: new Date().getTime(),\n          categoryId: _this2.movieform.value.categoryId_,\n          subimageUrl: _this2.urlimage\n        };\n\n        if (_this2.movieform.value.title_ != \"\" && _this2.movieform.value.description_ != \"\" && _this2.movieform.value.imageUrl_ != \"\" && _this2.movieform.value.categoryId_ != \"\") {\n          _this2.bookservice.postBook(movie).subscribe(data => {\n            console.log(data);\n\n            _this2.router.navigate(['/books']);\n          });\n\n          _this2.alertifyService.success(movie.title);\n        }\n      });\n    })();\n  }\n\n  ClearForm() {\n    this.movieform.patchValue({\n      title_: '',\n      description_: '',\n      imageUrl_: '',\n      categoryId_: '-1'\n    });\n  }\n\n}\n\nBookcreateComponent.ɵfac = function BookcreateComponent_Factory(t) {\n  return new (t || BookcreateComponent)(i0.ɵɵdirectiveInject(i1.GenreService), i0.ɵɵdirectiveInject(i2.BooksService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.HttpClient));\n};\n\nBookcreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookcreateComponent,\n  selectors: [[\"app-bookcreate\"]],\n  features: [i0.ɵɵProvidersFeature([GenreService, BooksService, AlertifyService])],\n  decls: 2,\n  vars: 0,\n  template: function BookcreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"bookcreate works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJib29rY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","GenreService","AlertifyService","BooksService","BookcreateComponent","constructor","genreService","bookservice","alertifyService","router","http","genreId","title_","required","minLength","description_","imageUrl_","categoryId_","subimageUrl_","getfile","event","file","target","files","ngOnInit","getGenre","subscribe","data","genres","isFormValid","movieform","disabled","valid","createBook","formData","FormData","set","append","uploadSignature","imageData","urlimage","url","console","log","movie","title","value","description","imageUrl","isPopular","datePublished","Date","getTime","categoryId","subimageUrl","postBook","navigate","success","ClearForm","patchValue","i0","selectors","features","decls","vars","template"],"sourceRoot":"","sources":["G:\\Step\\Ev tapşırıqları\\4 -cü yarım il\\Angular\\Layihə\\10\\Angular_E-commerce\\appEcommerce\\src\\app\\Components\\books\\Components\\bookcreate\\bookcreate.component.ts","G:\\Step\\Ev tapşırıqları\\4 -cü yarım il\\Angular\\Layihə\\10\\Angular_E-commerce\\appEcommerce\\src\\app\\Components\\books\\Components\\bookcreate\\bookcreate.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Genre } from 'src/app/Components/genre/Models/genre';\nimport { GenreService } from 'src/app/Components/genre/Services/genre.service';\nimport { AlertifyService } from 'src/app/Services/alertify/alertify.service';\nimport { BooksService } from '../../Services/books.service';\n\n@Component({\n  selector: 'app-bookcreate',\n  templateUrl: './bookcreate.component.html',\n  styleUrls: ['./bookcreate.component.css'],\n  providers: [GenreService, BooksService, AlertifyService]\n})\nexport class BookcreateComponent implements OnInit {\n\n  genres: Genre[] = [];\n\n  model:any={genreId:-1};\n\n  file:any;\n\n  urlimage:any;\n\n  async getfile(event:any) {\n\n    this.file=event.target.files[0];\n\n  }\n\n  constructor(private genreService: GenreService, private bookservice: BooksService, private alertifyService: AlertifyService, private router: Router, private http:HttpClient) { }\n\n  ngOnInit(): void {\n\n    this.genreService.getGenre().subscribe(data => { this.genres = data });\n\n  }\n\n  movieform = new FormGroup({\n\n    title_: new FormControl(\"Movie title\",[Validators.required, Validators.minLength(5)]),\n    description_: new FormControl(\"Movie description\",[Validators.required]),\n    imageUrl_: new FormControl(\"../../../assets/Images/image.png\",[Validators.required]),\n    categoryId_: new FormControl(\"-1\",[Validators.required]),\n    subimageUrl_: new FormControl(\"\",[Validators.required])\n\n  });\n\n\n  isFormValid() : boolean {\n    return this.movieform.disabled ? true : this.movieform.valid\n  }\n\n\n  async createBook(){\n\n\n    let formData=new FormData();\n\n    formData.set('file', this.file);\n\n    formData.append(\"file\", this.file);\n\n    formData.append(\"upload_preset\", \"angular-ecommerce\");\n\n   this.bookservice.uploadSignature(formData).subscribe((imageData) => {\n    this.urlimage = imageData.url;\n\n    console.log(this.urlimage);\n\n\n    const movie = {\n      title: this.movieform.value.title_,\n      description: this.movieform.value.description_,\n      imageUrl: this.movieform.value.imageUrl_,\n      isPopular: false,\n      datePublished: new Date().getTime(),\n      categoryId: this.movieform.value.categoryId_,\n      subimageUrl: this.urlimage,\n    }\n\n\n\n\n    if(this.movieform.value.title_!=\"\" && this.movieform.value.description_!=\"\"  && this.movieform.value.imageUrl_!=\"\"  && this.movieform.value.categoryId_!=\"\")\n    {\n\n\n\n\n      this.bookservice.postBook(movie).subscribe(data => {console.log(data); this.router.navigate(['/books'])});\n\n      this.alertifyService.success(movie.title);\n\n    }\n  })\n\n\n\n\n\n  }\n\n  ClearForm(){\n\n    this.movieform.patchValue({\n\n      title_: '',\n      description_: '',\n      imageUrl_: '',\n      categoryId_:'-1',\n\n    });\n\n  }\n}\n\n\n","<p>bookcreate works!</p>\n"]},"metadata":{},"sourceType":"module"}